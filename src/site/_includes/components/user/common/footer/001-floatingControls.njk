<aside id="floating-control">
    <!-- Sidebar Toggle Button -->
    <span id="sidebar-toggle" title="Toggle Sidebar">
        <i class="svg-icon toggle-on" icon-name="eye" aria-hidden="true"></i>
        <i class="svg-icon toggle-off" icon-name="eye-closed" aria-hidden="true"></i>
    </span>
    <span id="theme-switch" class="dark">
        <i class="svg-icon light" icon-name="sun" aria-hidden="true"></i>
        <i class="svg-icon dark" icon-name="moon" aria-hidden="true"></i>
    </span>
    <a href="https://github.com/MarcelKoeberlin" title="GitHub" target="_blank">
        <i icon-name="github" title="GitHub" aria-hidden="true"></i>
    </a>    
    <a href="https://www.linkedin.com/in/marcel-k%C3%B6berlin-776397244/" title="LinkedIn" target="_blank">
        <i icon-name="linkedin" title="LinkedIn" aria-hidden="true"></i>
    </a>
    <a title="Start a Discussion" id="emailme" href="mailto:mkoeberlin@ethz.ch?subject=Regarding {{title}}&body=Discussing {{meta.siteBaseUrl}}{{permalink}}">
        <i icon-name="mail" title="Discuss" aria-hidden="true"></i>
    </a>
    <a href="https://koeberlin.netlify.app/" title="Home" target="_blank">
        <i icon-name="house" title="Home" aria-hidden="true"></i>
    </a>  
</aside>

<script>
    function setThemeIcon(theme) {
        const themeSwitch = document.getElementById('theme-switch');
        themeSwitch.classList.remove('light', 'dark');
        themeSwitch.classList.add(theme);
    }

    function applyTheme(theme) {
        document.body.classList.remove('theme-light', 'theme-dark');
        document.body.classList.add(`theme-${theme}`);
        document.documentElement.setAttribute('data-theme', theme);
    }

    function changeGiscusTheme() {
        const theme = document.documentElement.getAttribute('data-theme') === 'dark' ? 'dark_high_contrast' : 'light_high_contrast';

        function sendMessage(message) {
            const iframe = document.querySelector('iframe.giscus-frame');
            if (!iframe) return;
            iframe.contentWindow.postMessage({ giscus: message }, 'https://giscus.app');
        }

        sendMessage({
            setConfig: {
                theme: theme
            }
        });
    }

    function setTheme(theme, updateIcon = true) {
        if (updateIcon) {
            setThemeIcon(theme);
        }
        applyTheme(theme);
        window.localStorage.setItem('site-theme', theme);
        window.theme = theme;
        
        // Update Giscus comments theme
        changeGiscusTheme();
    }

    document.getElementById('theme-switch').addEventListener('click', () => {
        const newTheme = window.theme === 'dark' ? 'light' : 'dark';
        setTheme(newTheme);
    });

    // Initialize theme on page load
    const savedTheme = window.localStorage.getItem('site-theme') || 'dark';
    setTheme(savedTheme);
</script>

<style>
#theme-switch .svg-icon {
    display: none;
}

#theme-switch.light .svg-icon.light {
    display: inline;
}

#theme-switch.dark .svg-icon.dark {
    display: inline;
}
</style>

<script>
    // Handle Sidebar Toggle
    const sidebarToggle = document.getElementById('sidebar-toggle');
    const sidebar = document.querySelector('.sidebar');

    // Toggle visibility
    sidebarToggle.addEventListener('click', () => {
        const isHidden = sidebar.classList.toggle('hidden');
        sidebarToggle.classList.toggle('hidden', isHidden); // Adjust icon visibility
    });
</script>
